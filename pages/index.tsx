import { useState } from "react";
import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import { ScrollMenu, VisibilityContext } from "react-horizontal-scrolling-menu";
import { Card } from "./components/Card";

type scrollVisibilityApiType = React.ContextType<typeof VisibilityContext>;

const elemPrefix = "test";
const getId = (index: number) => `${elemPrefix}${index}`;

const getItems = () =>
  Array(20)
    .fill(0)
    .map((_, ind) => ({ id: getId(ind) }));

const work = [
  {
    id: "0",
    title: "Test",
    image: "card1.jpg",
  },
  {
    id: "1",
    title: "Test",
    image: "card2.JPG",
  },
  {
    id: "2",
    title: "Test",
    image: "card3.JPG",
  },
];

const Home: NextPage = () => {
  const [items] = useState(getItems);

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>
        <ScrollMenu onWheel={onWheel}>
          {work.map(work => (
            <Card
              image={work.image}
              title={work.title}
              itemId={work.id}
              key={work.id}
            />
          ))}
        </ScrollMenu>
      </div>
    </div>
  );
};

function onWheel(apiObj: scrollVisibilityApiType, ev: React.WheelEvent): void {
  const isThouchpad = Math.abs(ev.deltaX) !== 0 || Math.abs(ev.deltaY) < 15;

  if (isThouchpad) {
    ev.stopPropagation();
    return;
  }

  if (ev.deltaY < 0) {
    apiObj.scrollNext();
  } else if (ev.deltaY > 0) {
    apiObj.scrollPrev();
  }
}

export default Home;
